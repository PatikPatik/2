import os
import asyncio
from threading import Thread
from flask import Flask
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
import nest_asyncio

TOKEN = os.getenv("BOT_TOKEN")  # –£–±–µ–¥–∏—Å—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ Render

app = Flask(__name__)

@app.route("/")
def index():
    return "‚úÖ Bot is alive!"

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üí∞ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="balance")],
        [InlineKeyboardButton("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def handle_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "balance":
        await query.edit_message_text(text="üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: 0.000123 BTC")
    elif query.data == "stats":
        await query.edit_message_text(text="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: —Ö–µ—à—Ä–µ–π—Ç 12 GH/s")

# Telegram –±–æ—Ç
async def telegram_bot():
    application = Application.builder().token(TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(handle_button))
    await application.initialize()
    await application.start()
    print("‚úÖ Telegram bot started")
    await application.updater.wait_until_closed()

# Flask-—Å–µ—Ä–≤–µ—Ä
def run_flask():
    port = int(os.environ.get("PORT", 10000))
    app.run(host="0.0.0.0", port=port)

if __name__ == "__main__":
    nest_asyncio.apply()  # –†–∞–∑—Ä–µ—à–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—É—Å–∫ asyncio-—Ü–∏–∫–ª–∞
    Thread(target=run_flask).start()
    asyncio.get_event_loop().run_until_complete(telegram_bot())
