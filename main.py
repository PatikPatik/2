from flask import Flask
from threading import Thread
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters
import asyncio
import os

TOKEN = os.environ.get("BOT_TOKEN")

app = Flask(__name__)

@app.route("/")
def index():
    return "Bot is alive!"

# –ö–Ω–æ–ø–∫–∏
keyboard = [
    ["üí∞ –ë–∞–ª–∞–Ω—Å", "üöÄ –ö—É–ø–∏—Ç—å —Ö–µ—à—Ä–µ–π—Ç"],
    ["üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", "‚ÑπÔ∏è –ü–æ–º–æ—â—å"]
]
reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ–±–ª–∞—á–Ω–æ–≥–æ –º–∞–π–Ω–∏–Ω–≥–∞.",
        reply_markup=reply_markup
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == "üí∞ –ë–∞–ª–∞–Ω—Å":
        await update.message.reply_text("‚ù§Ô∏è –í–∞—à –±–∞–ª–∞–Ω—Å: 0.00 USDT")
    elif text == "üöÄ –ö—É–ø–∏—Ç—å —Ö–µ—à—Ä–µ–π—Ç":
        await update.message.reply_text("–í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å —Ö–µ—à—Ä–µ–π—Ç –∑–¥–µ—Å—å.")
    elif text == "üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞":
        await update.message.reply_text("–í–æ—Ç –≤–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/your_bot?start=ref123")
    elif text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å":
        await update.message.reply_text("–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã.")
    else:
        await update.message.reply_text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.")

async def telegram_bot():
    application = Application.builder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("‚úÖ Telegram bot started")
    await application.run_polling()

def run_flask():
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)

if __name__ == "__main__":
    Thread(target=run_flask).start()
    asyncio.run(telegram_bot())
