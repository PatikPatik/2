import os
from threading import Thread
from flask import Flask
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    Application, CommandHandler, MessageHandler,
    ContextTypes, filters
)

TOKEN = os.environ.get("BOT_TOKEN")  # –∏–ª–∏ –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å—Ç—Ä–æ–∫—É —Ç–æ–∫–µ–Ω–∞ –Ω–∞–ø—Ä—è–º—É—é

app = Flask(__name__)

@app.route("/")
def index():
    return "Bot is alive!"

# –ö–æ–º–∞–Ω–¥–∞ /start —Å –∫–Ω–æ–ø–∫–∞–º–∏
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["üõí –ö—É–ø–∏—Ç—å", "üë§ –ü—Ä–æ—Ñ–∏–ª—å"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def handle_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == "üõí –ö—É–ø–∏—Ç—å":
        await update.message.reply_text("üîÑ –ó–∞–≥—Ä—É–∂–∞—é –∫–∞—Ç–∞–ª–æ–≥...")
    elif text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å":
        await update.message.reply_text("üßæ –í–æ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–≤–æ—ë–º –ø—Ä–æ—Ñ–∏–ª–µ.")
    else:
        await update.message.reply_text("–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É üòï")

# Telegram-–±–æ—Ç
async def telegram_bot():
    application = Application.builder().token(TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_buttons))

    await application.initialize()
    await application.start()
    print("‚úÖ Telegram bot started")
    await application.updater.wait_until_closed()

# Flask-—Å–µ—Ä–≤–µ—Ä
def run_flask():
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
if __name__ == "__main__":
    Thread(target=run_flask).start()
    import asyncio
    asyncio.run(telegram_bot())
