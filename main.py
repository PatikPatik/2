import logging
import asyncio
from flask import Flask
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)
import nest_asyncio

nest_asyncio.apply()

# üîê –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "8190768971:AAGGSA5g-hUnrc34R8gOwwjfSez8BJ6Puz8"

# üåê Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

@app.route("/")
def home():
    return "‚úÖ Telegram bot is running"

# üéÆ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["üí∞ –ë–∞–ª–∞–Ω—Å", "üöÄ –ö—É–ø–∏—Ç—å —Ö–µ—à—Ä–µ–π—Ç"],
        ["üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", "‚ÑπÔ∏è –ü–æ–º–æ—â—å"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ–±–ª–∞—á–Ω–æ–≥–æ –º–∞–π–Ω–∏–Ω–≥–∞.", reply_markup=reply_markup)

# üß† –û–±—Ä–∞–±–æ—Ç–∫–∞ –í–°–ï–• –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_all(update: Update, context: ContextTypes.DEFAULT_TYPE):
    msg = update.message.text if update.message else "–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞"
    print(f"[–í–°–Å] –ü–æ–ª—É—á–µ–Ω–æ: {msg}")

    if msg == "üí∞ –ë–∞–ª–∞–Ω—Å":
        await update.message.reply_text("üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: 0.00000001 BTC")
    elif msg == "üöÄ –ö—É–ø–∏—Ç—å —Ö–µ—à—Ä–µ–π—Ç":
        await update.message.reply_text("üöÄ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Ö–µ—à—Ä–µ–π—Ç–∞.")
    elif msg == "üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞":
        await update.message.reply_text("üë• –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã!")
    elif msg == "‚ÑπÔ∏è –ü–æ–º–æ—â—å":
        await update.message.reply_text("‚ÑπÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã.")

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def telegram_bot():
    application = Application.builder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.ALL, handle_all))

    print("‚úÖ Telegram bot started")
    await application.run_polling()

if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    loop.create_task(telegram_bot())
    app.run(host="0.0.0.0", port=5000)
