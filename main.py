import asyncio
import os
from flask import Flask
from threading import Thread
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import (
    Application,
    CommandHandler,
    CallbackQueryHandler,
    ContextTypes,
    MessageHandler,
    filters,
)

TOKEN = "8190768971:AAGGSA5g-hUnrc34R8gOwwjfSez8BJ6Puz8"

app = Flask(__name__)

@app.route("/")
def index():
    return "Bot is alive!"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [
            InlineKeyboardButton("üí∞ –ë–∞–ª–∞–Ω—Å", callback_data="balance"),
            InlineKeyboardButton("üöÄ –ö—É–ø–∏—Ç—å —Ö–µ—à—Ä–µ–π—Ç", callback_data="buy_hashrate")
        ],
        [
            InlineKeyboardButton("üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", callback_data="invite"),
            InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ–±–ª–∞—á–Ω–æ–≥–æ –º–∞–π–Ω–∏–Ω–≥–∞.", reply_markup=reply_markup)

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data

    if data == "balance":
        await query.edit_message_text("üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: 0.00 USDT")
    elif data == "buy_hashrate":
        await query.edit_message_text("üöÄ –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —Ö–µ—à—Ä–µ–π—Ç, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: https://example.com")
    elif data == "invite":
        await query.edit_message_text("üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–≥–∞ –∏ –ø–æ–ª—É—á–∏—Ç–µ 1% –æ—Ç –µ–≥–æ –¥–æ—Ö–æ–¥–∞!")
    elif data == "help":
        await query.edit_message_text("‚ÑπÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")

async def unknown(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–Ø –Ω–µ –ø–æ–Ω—è–ª —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ù–∞–ø–∏—à–∏—Ç–µ /start.")

async def telegram_bot():
    application = Application.builder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_callback))
    application.add_handler(MessageHandler(filters.COMMAND, unknown))

    print("‚úÖ Telegram bot started")
    await application.run_polling()

def run_flask():
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)

if __name__ == "__main__":
    Thread(target=run_flask).start()
    asyncio.get_event_loop().run_until_complete(telegram_bot())
